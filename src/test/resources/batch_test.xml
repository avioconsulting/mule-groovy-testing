<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
    <http:request-config name="SomeSystem"
                         basePath="/"
                         doc:name="HTTP Request Configuration">
        <http:request-connection host="localhost" port="443" protocol="HTTP"/>
    </http:request-config>
    <flow name="theJobContainerFlow">
        <batch:job jobName="theJob">
            <batch:process-records>
                <batch:step name="theStep">
                    <ee:transform doc:name="Transform Message">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    key: payload.foo
}]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <http:request config-ref="SomeSystem" path="/some_path" method="POST" doc:name="SomeSystem Call"/>
                </batch:step>
            </batch:process-records>
            <batch:on-complete>
                <logger message="entered on-complete" level="INFO"/>
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    key: -1
}]]></ee:set-payload>
                    </ee:message>
                </ee:transform>
                <logger message="Making HTTP call from onComplete" level="INFO"/>
                <http:request config-ref="SomeSystem" path="/some_path" method="POST"
                              doc:name="SomeSystem Call from Complete"/>
                <logger message="we executed the onComplete HTTP request" level="INFO"/>
            </batch:on-complete>
        </batch:job>
    </flow>
    <flow name="secondJobCallsFirstContainerFlow">
        <set-variable variableName="originalPayload" value="#[payload]"/>
        <batch:job jobName="secondJobCallsFirst">
            <batch:process-records>
                <batch:step name="theStep2">
                    <logger message="howdy"/>
                </batch:step>
            </batch:process-records>
            <batch:on-complete>
                <set-payload value="#[vars.originalPayload]"/>
                <flow-ref name="theJobContainerFlow"/>
            </batch:on-complete>
        </batch:job>
    </flow>
    <flow name="secondJobCallsFirstTwiceContainerFlow">
        <set-variable variableName="originalPayload" value="#[payload]"/>
        <batch:job jobName="secondJobCallsFirstTwice">
            <batch:process-records>
                <batch:step name="theStep2">
                    <logger message="howdy"/>
                </batch:step>
            </batch:process-records>
            <batch:on-complete>
                <set-payload value="#[vars.originalPayload]"/>
                <flow-ref name="theJobContainerFlow" target="#[vars.trash]"/>
                <flow-ref name="theJobContainerFlow"/>
            </batch:on-complete>
        </batch:job>
    </flow>
</mule>
